plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'net.minecraftforge.gradleutils' version '[2.0.10,)'
}

version = "6.0-SNAPSHOT"

changelog {
    fromTag '5.0'
    disableAutomaticPublicationRegistration()
}

subprojects { Project subproject ->
    subproject.apply plugin: 'net.minecraftforge.gradleutils'

    subproject.apply plugin: 'java-library'
    subproject.apply plugin: 'maven-publish'

    subproject.apply plugin: 'eclipse'
    subproject.apply plugin: 'idea'

    subproject.version = subproject.rootProject.version
    subproject.group = 'net.minecraftforge.gradle'
    subproject.archivesBaseName = "fg-${subproject.name.toLowerCase()}"

    subproject.java.toolchain.languageVersion = JavaLanguageVersion.of(subproject.java_version)
    subproject.java.withSourcesJar()

    subproject.configurations.all { Configuration configuration ->
        configuration.exclude group: 'org.ow2.asm'
    }

    subproject.repositories.mavenLocal()
    subproject.repositories.maven { MavenArtifactRepository repository ->
        repository.name 'MinecraftForge'
        repository.url = 'https://maven.minecraftforge.net/'
    }

    //TODO: Rehost the idea repositories on FORGEMAVEN!
    subproject.repositories.maven { MavenArtifactRepository repository ->
        repository.name 'Sponge'
        repository.url = 'https://repo.spongepowered.org/repository/maven-public/'
    }

    subproject.dependencies.api "org.jetbrains:annotations:${project.jetbrains_annotations_version}"

    subproject.afterEvaluate { Project evaledSubProject ->
        if (evaledSubProject.getPlugins().hasPlugin("java-gradle-plugin")) {
            subproject.gradlePlugin.automatedPublishing = true

            subproject.publishing.publications {
                pluginMaven(MavenPublication) { MavenPublication publication ->
                    project.changelog.publish(publication)
                }
            }
        } else {
            subproject.publishing.publications {
                maven(MavenPublication) { MavenPublication publication ->
                    project.changelog.publish(publication)
                    from components.java
                }
            }
        }
    }


    subproject.publishing.repositories.maven gradleutils.getPublishingForgeMaven()
}

tasks.named('wrapper', Wrapper).configure { Wrapper wrapperTask ->
    wrapperTask.gradleVersion = project.gradle_version
    wrapperTask.distributionType = Wrapper.DistributionType.ALL
}

tasks.create('info') {
    group = 'forgegradle'
    description = 'Prints out some useful information about the project.'
    doLast {
        logger.lifecycle("Version: $version")
        logger.lifecycle("Java:    ${System.getProperty('java.version')}")
        logger.lifecycle("JVM:     ${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')})")
        logger.lifecycle("Arch:    ${System.getProperty('os.arch')}")
    }
}